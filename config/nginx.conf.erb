daemon off;
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
    worker_connections 1024;
}

error_log   /dev/stdout warn;
pid         /var/run/nginx.pid;

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '[$time_local] nginx $remote_addr - $remote_user "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for" '
    '$request_time $upstream_response_time $pipe';

    access_log /dev/stdout main;

    sendfile on;
    #tcp_nopush on;

    keepalive_timeout 65;

    gzip on;

    # the upstream component nginx needs to connect to
    upstream django {
        server unix:/app/app.sock; # for a file socket
    }

    # configuration of the server
    server {
        # the port your site will be served on, default_server indicates that this server block
        # is the block to use if no blocks match the server_name
        listen <%= ENV["PORT"] %> default_server;

        # the domain name it will serve for
        server_name _;
        charset     utf-8;

        # max upload size
        client_max_body_size 75M;   # adjust to taste

        # Django media
        location /media  {
            alias /app/media;  # your Django project's media files - amend as required
        }

        location /static {
            alias /app/staticfiles; # your Django project's static files - amend as required
        }

        set $my_host $host;
        # if the host header is an ip address change it to healthcheck.fakenewslinks.com
        # this works around requests coming from ELB with either the instance's
        # internal ip address in the case of health checks or an unknown internal
        # ip address in the case of latency checks. translating them to a known
        # good host header makes django's ALLOWED_HOSTS happy
        if ($host ~ "\d+\.\d+\.\d+\.\d+") {
            set $my_host "healthcheck.fakenewslinks.com";
        }

        # Finally, send all non-media requests to the Django server.
        location / {
            uwsgi_pass  django;
            uwsgi_param HTTP_HOST $my_host;
            include     /app/uwsgi_params; # the uwsgi_params file you installed
        }
    }
}
