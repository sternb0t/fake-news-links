{"version":3,"sources":["app.js"],"names":["collapseNavbar","$","offset","top","addClass","removeClass","window","scroll","document","ready","bind","event","$anchor","this","stop","animate","scrollTop","attr","preventDefault","click","closest","collapse","getAttributes","get","done","data","left","right","i","results","length","content","id","name","append","fail","err","console","log","getStats","text","count","fn","dataTable","moment","table","DataTable","ajax","url","dataSrc","columns","render","fromNow","columnDefs","targets","orderData","visible","searchable","order","reload","submit","doPost","position","val","latitude","coords","Math","round","longitude","geoAccuracy","accuracy","contributeAttributes","map","value","geo_accuracy","attributes","type","JSON","stringify","contentType","dataType","hide","show","navigator","geolocation","getCurrentPosition"],"mappings":"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","file":"../app.min.js","sourcesContent":["/*!\n * Start Bootstrap - Grayscale Bootstrap Theme (http://startbootstrap.com)\n * Code licensed under the Apache License v2.0.\n * For details, see http://www.apache.org/licenses/LICENSE-2.0.\n */\n\n// jQuery to collapse the navbar on scroll\nfunction collapseNavbar() {\n    if ($(\".navbar\").offset().top > 50) {\n        $(\".navbar-fixed-top\").addClass(\"top-nav-collapse\");\n    } else {\n        $(\".navbar-fixed-top\").removeClass(\"top-nav-collapse\");\n    }\n}\n\n$(window).scroll(collapseNavbar);\n$(document).ready(collapseNavbar);\n\n// jQuery for page scrolling feature - requires jQuery Easing plugin\n$(function() {\n    $('a.page-scroll').bind('click', function(event) {\n        var $anchor = $(this);\n        $('html, body').stop().animate({\n            scrollTop: $($anchor.attr('href')).offset().top\n        }, 1500, 'easeInOutExpo');\n        event.preventDefault();\n    });\n});\n\n// Closes the Responsive Menu on Menu Item Click\n$('.navbar-collapse ul li a').click(function() {\n    $(this).closest('.collapse').collapse('toggle');\n});\n\n$(document).ready(function(){\n\n    function getAttributes() {\n        $.get(\"/api/attributes/\")\n            .done(function(data){\n                var left = $('#contribute-attributes-left');\n                var right = $('#contribute-attributes-right');\n\n                for (var i = 0; i < data.results.length; i++) {\n                   var attr = data.results[i];\n                   var content = '<div class=\"form-check\"><label class=\"form-check-label\"><input class=\"contribute-attribute form-check-input\" type=\"checkbox\" value=\"' + attr.id + '\"> ' + attr.name + '</label></div>';\n                   if (i < data.results.length / 2) {\n                       left.append(content);\n                   }\n                   else {\n                       right.append(content);\n                   }\n                }\n            })\n            .fail(function(err){\n                console.log(err);\n            });\n    }\n    getAttributes();\n\n    // get stats from api\n    function getStats() {\n        $.get(\"/api/stats/\")\n            .done(function(data){\n                $('#fake-news-links-count').text(data.count);\n            })\n            .fail(function(err){\n                console.log(err);\n            });\n    }\n    getStats();\n\n    // show recent data in the explore table\n    $.fn.dataTable.moment(\"YYYY-MM-DDTHH:mm:ss.SSSSZ\");\n    var table = $('#fake-news-table').DataTable({\n    ajax: {\n        url: \"/api/links/\",\n        dataSrc: \"results\"\n    },\n    columns: [\n        {\n            data: \"url\",\n            render: function(data){\n                return '<a href=\"' + data + '\">' + data + '</a>';\n            }\n        },\n        {\n            data: \"created_date\",\n            render: function(data){\n                return moment(data).fromNow();\n            }\n        },\n        {\n            data: \"created_date\"\n        }\n    ],\n    columnDefs: [\n        {\n            targets: [1],\n            orderData:[2]\n        },\n        {\n            targets: [2],\n            visible: false,\n            searchable: false\n        }\n    ],\n    order: [[ 1, \"desc\" ]]\n    });\n\n    // refresh data with the refresh button\n    $('#refresh-table').click(function(){\n      table.ajax.reload();\n      getStats();\n    });\n\n    // contribute a URL via the API\n    $('#contribute-form').submit(function(event) {\n        event.preventDefault();\n        $('.contribute-results').hide();\n        $('#contribute-spinner').show();\n\n        function doPost(position) {\n            var url = $('#contribute-url').val();\n            var latitude = position.coords && position.coords.latitude ? Math.round(position.coords.latitude * 100000) / 100000 : null;\n            var longitude = position.coords && position.coords.longitude ? Math.round(position.coords.longitude * 100000) / 100000 : null;\n            var geoAccuracy = position.coords && position.coords.accuracy ? Math.round(position.coords.accuracy * 100000) / 100000 : null;\n            var contributeAttributes = ($('input.contribute-attribute:checkbox:checked')).map(function() {\n                return {id: this.value};\n            }).get();\n            var data = {\n                url: url,\n                latitude: latitude,\n                longitude: longitude,\n                geo_accuracy: geoAccuracy,\n                attributes: contributeAttributes\n            };\n            $.ajax({\n              type: \"POST\",\n              url: \"/api/links/\",\n              data: JSON.stringify(data),\n              contentType: \"application/json\",\n              dataType: \"json\"\n            }).done(function(){\n                $('#contribute-url').val('');\n                table.ajax.reload();\n                getStats();\n                $('#contribute-spinner').hide();\n                $('#contribute-success').show();\n            })\n            .fail(function(err){\n                console.log(err);\n                $('#contribute-spinner').hide();\n                $('#contribute-fail').show();\n            });\n        }\n\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(doPost, doPost);\n        }\n        else {\n            doPost();\n        }\n    });\n});\n\n"]}